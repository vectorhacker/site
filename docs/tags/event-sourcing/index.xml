<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Event Sourcing on Victor&#39;s Personal Blog</title>
    <link>https://victoramartinez.com/tags/event-sourcing/</link>
    <description>Recent content in Event Sourcing on Victor&#39;s Personal Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Victor A. Mart√≠nez Santiago</copyright>
    <lastBuildDate>Mon, 23 Mar 2020 21:13:59 -0400</lastBuildDate><atom:link href="https://victoramartinez.com/tags/event-sourcing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Event Sourcing in Go</title>
      <link>https://victoramartinez.com/posts/event-sourcing-in-go/</link>
      <pubDate>Mon, 23 Mar 2020 21:13:59 -0400</pubDate>
      
      <guid>https://victoramartinez.com/posts/event-sourcing-in-go/</guid>
      <description>I&amp;rsquo;ve recently gone into doing CQRS with event sourcing along with DDD (Domain Driven Design) principles. I&amp;rsquo;ve been doing it in Go and want to share how I do it.
To begin with, I&amp;rsquo;ve researched this topic thoroughly; I&amp;rsquo;ve probably watched and re-watched hundreds of videos and read many posts, articles, and books on it. I am by no means a cqrs/es expert, but I have gained some insight into how to do it.</description>
    </item>
    
  </channel>
</rss>
