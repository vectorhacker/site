<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Domain-Driven Design on Victor&#39;s Blog</title>
    <link>https://victoramartinez.com/tags/domain-driven-design/</link>
    <description>Recent content in Domain-Driven Design on Victor&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Victor Mart√≠nez</copyright>
    <lastBuildDate>Fri, 23 Oct 2020 03:12:35 -0400</lastBuildDate><atom:link href="https://victoramartinez.com/tags/domain-driven-design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Value Objects in Go</title>
      <link>https://victoramartinez.com/posts/value-objects-in-go-and-other-domain-driven-design-stuff/</link>
      <pubDate>Fri, 23 Oct 2020 03:12:35 -0400</pubDate>
      
      <guid>https://victoramartinez.com/posts/value-objects-in-go-and-other-domain-driven-design-stuff/</guid>
      <description>Recently I&amp;rsquo;ve been thinking a lot about how to apply some DDD principles in Go in idiomatic and simple ways, and I&amp;rsquo;ve come accross a few patterns I&amp;rsquo;d like to share. Mainly we&amp;rsquo;ll be talking about how to apply the concept of Value Objects in Go in two ways. These are examples of how I apply them in my projects and actually use them so these are not just toy examples.</description>
    </item>
    
    <item>
      <title>Event Sourcing in Go</title>
      <link>https://victoramartinez.com/posts/event-sourcing-in-go/</link>
      <pubDate>Mon, 23 Mar 2020 21:13:59 -0400</pubDate>
      
      <guid>https://victoramartinez.com/posts/event-sourcing-in-go/</guid>
      <description>I&amp;rsquo;ve recently gone into doing CQRS with event sourcing along with DDD (Domain Driven Design) principles. I&amp;rsquo;ve been doing it in Go and want to share how I do it.
To begin with, I&amp;rsquo;ve researched this topic thoroughly; I&amp;rsquo;ve probably watched and re-watched hundreds of videos and read many posts, articles, and books on it. I am by no means a cqrs/es expert, but I have gained some insight into how to do it.</description>
    </item>
    
  </channel>
</rss>
